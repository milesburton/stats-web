{"ts":1369741433941,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"package com.mb.stats.feature.spec\n\nimport com.mb.stats.feature.fixture.TeamFixture\nimport com.mb.stats.feature.page.TeamPage\nimport com.mb.stats.feature.spec.base.ApiSpec\n\nclass TeamPageSpec extends ApiSpec {\n\n    TeamFixture teamFixture = new TeamFixture()\n\n    def 'user is shown team page'() {\n\n        given:\n        def team = buildTeamFixturesFor('0')\n\n        when:\n        to TeamPage, team.teamId\n\n        then:\n        at TeamPage\n\n        and:\n        titleContains(team.teamId.toString())\n        navbar.hasCorrectHeading(team.alias)\n        subnavbar.hasCorrectNumberOfLinks()\n        subnavbar.isActive('Home')\n        footer.isValidCopyright()\n\n        and:\n        hasCorrectHeadings(team)\n    }\n\n    def buildTeamFixturesFor(String teamId) {\n\n        def team = teamFixture.forQuery(teamId)\n\n        imposterRemote.reset()\n        imposterRemote.configure(\n                teamFixture.get(teamId),\n                teamFixture.andRespondWith(team))\n\n        team\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":987}]],"length":987}
{"contributors":[],"silentsave":false,"ts":1369744211498,"patch":[[{"diffs":[[0,"e.spec\n\n"],[1,"import com.mb.stats.feature.fixture.TeamHistoryFixture\n"],[0,"import c"]],"start1":27,"start2":27,"length1":16,"length2":71},{"diffs":[[0,"ixture()"],[1,"\n    TeamHistoryFixture teamHistoryFixture = new TeamHistoryFixture()"],[0,"\n\n    de"]],"start1":304,"start2":304,"length1":16,"length2":85},{"diffs":[[0,"m\n    }\n"],[1,"    \n    def buildTeamHistoryFixturesFor(String teamId, Long timestampBegin, Long timestampEnd) {\n        \n         def history = teamHistoryFixture.forQuery(teamId, timestampBegin, timestampEnd)\n\n        imposterRemote.reset()\n        imposterRemote.configure(\n                teamHistoryFixture.get(teamId, timestampBegin, timestampEnd),\n                teamHistoryFixture.andRespondWith(history))\n\n        history\n        \n    }\n"],[0,"}\n"]],"start1":1101,"start2":1101,"length1":10,"length2":442}]],"length":1543,"saved":false}
{"ts":1369745439051,"patch":[[{"diffs":[[0,".ApiSpec"],[1,"\nimport com.test.QueryStringHelper"],[0,"\n\nclass "]],"start1":217,"start2":217,"length1":16,"length2":50},{"diffs":[[0,")\n    }\n"],[1,"    \n    def 'highcharts expects history of daily point peaks'(){\n      \n      given:\n      def teamId = 62\n      def timestampBegin = 0\n      def timestampEnd = 10\n      \n      and:\n      def history = buildTeamHistoryFixturesFor(teamId, timestampBegin, timestampEnd)\n      \n      when:\n      def response = restClient.get(\"/teams/${teamId}?\" + asQueryString([timestampBegin:timestampBegin,timestampEnd:timestampEnd]))\n      \n      then:\n      response = []\n      \n    }\n    "],[0,"\n    def"]],"start1":862,"start2":862,"length1":16,"length2":492}]],"length":2053,"saved":false}
{"ts":1369745766446,"patch":[[{"diffs":[[0,"{teamId}"],[1,"/history"],[0,"?\" + asQ"]],"start1":1203,"start2":1203,"length1":16,"length2":24}]],"length":2061,"saved":false}
