{"ts":1369740653450,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"package com.mb.stats.feature.fixture\n\nimport com.mb.stats.feature.spec.base.UsesBaseUrlTag\nimport grails.converters.JSON\nimport net.xelnaga.httpimposter.model.HttpHeader\nimport net.xelnaga.httpimposter.model.ImposterRequest\nimport net.xelnaga.httpimposter.model.ImposterResponse\n\nimport static org.apache.http.HttpStatus.SC_NOT_FOUND\nimport static org.apache.http.HttpStatus.SC_OK\n\nclass TeamFixture implements UsesBaseUrlTag {\n\n    String baseUrl\n\n    ImposterRequest get(String teamId) {\n\n        return new ImposterRequest(\n                uri: \"/stats-web/fake/api/teams/${teamId}\",\n                method: 'GET',\n                headers: [new HttpHeader('accept', 'application/json')],\n                body: ''\n        )\n    }\n\n    ImposterResponse andRespondWith(def team) {\n\n        return new ImposterResponse(\n                status: SC_OK.value,\n                headers: [],\n                body: team as JSON\n\n        )\n    }\n\n    ImposterResponse andRespondWith404() {\n\n        return new ImposterResponse(\n                status: SC_NOT_FOUND.value,\n                headers: [],\n                body: ''\n\n        )\n    }\n\n    def forQuery(String teamId) {\n\n        JSON.parse(getClass().getResourceAsStream('teams.json').text).results.find { it.teamId.toString() == teamId }\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1296}]],"length":1296}
{"contributors":[],"silentsave":false,"ts":1369740787331,"patch":[[{"diffs":[[0,"et(String teamId"],[1,", Long timestampBegin, Long timestampEnd"],[0,") {\n\n        ret"]],"start1":470,"start2":470,"length1":32,"length2":72},{"diffs":[[0,"{teamId}"],[1,"/history?timestampBegin=${timestampBegin}&timestampEnd=${timestampEnd}"],[0,"\",\n     "]],"start1":616,"start2":616,"length1":16,"length2":86},{"diffs":[[0,"    "],[-1,"ImposterResponse andRespondWith404() {\n\n        return new ImposterResponse(\n                status: SC_NOT_FOUND.value,\n                headers: [],\n                body: ''\n\n        )\n    }\n\n    def forQuery(String teamI"],[1,"def forQuery(String teamId, Long timestampBegin, Long timestampEn"],[0,"d) {"]],"start1":1048,"start2":1048,"length1":230,"length2":73},{"diffs":[[0,"am('team"],[-1,"s"],[1,"History"],[0,".json')."]],"start1":1170,"start2":1170,"length1":17,"length2":23},{"diffs":[[0,"ext)"],[-1,".results.find { it.teamId.toString() == teamId }"],[0,"\n   "]],"start1":1194,"start2":1194,"length1":56,"length2":8}]],"length":1207,"saved":false}
{"contributors":[],"silentsave":false,"ts":1369744212180,"patch":[[{"diffs":[[0,"ith(def "],[-1,"team"],[1,"history"],[0,") {\n\n   "]],"start1":875,"start2":875,"length1":20,"length2":23},{"diffs":[[0,"  body: "],[-1,"team"],[1,"history"],[0," as JSON"]],"start1":1012,"start2":1012,"length1":20,"length2":23}]],"length":1213,"saved":false}
